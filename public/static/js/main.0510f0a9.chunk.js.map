{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","lessons/pages/NewLesson.js","shared/components/UIElements/Map.js","lessons/components/LessonItem.js","lessons/components/LessonList.js","lessons/pages/UserLessons.js","lessons/pages/UpdateLesson.js","user/pages/Auth.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","lessonCount","UsersList","items","length","map","user","key","lessons","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","i","NewLesson","auth","useContext","title","description","address","inputHandler","history","useHistory","lessonSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","LessonItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","LessonList","lesson","creator","location","onDeleteLesson","UserLessons","loadedLessons","setloadedLessons","useParams","fetchLessons","deletedlessonId","prevLessons","UpdateLesson","loadedLesson","setloadedLesson","lessonId","setFormData","fetchLesson","lessonUpdateSubmitHandler","JSON","stringify","logoutTimer","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.0510f0a9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/lessons`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.lessonCount} {props.lessonCount === 1 ? 'Lesson' : 'Lessons'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          lessonCount={user.lessons.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users`\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './LessonForm.css';\n\nconst NewLesson = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const lessonSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/lessons`, 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"lesson-form\" onSubmit={lessonSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD LESSON\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewLesson;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './LessonItem.css';\n\nconst LessonItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/lessons/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"lesson-item__modal-content\"\n        footerClass=\"lesson-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"lesson-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this lesson? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"lesson-item\">\n        <Card className=\"lesson-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"lesson-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"lesson-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"lesson-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              PLAY\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/lessons/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default LessonItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport LessonItem from './LessonItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './LessonList.css';\n\nconst LessonList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"lesson-list center\">\n        <Card>\n          <h2>No lessons found. Maybe create one?</h2>\n          <Button to=\"/lessons/new\">Share Lesson</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"lesson-list\">\n      {props.items.map(lesson => (\n        <LessonItem\n          key={lesson.id}\n          id={lesson.id}\n          image={lesson.image}\n          title={lesson.title}\n          description={lesson.description}\n          address={lesson.address}\n          creatorId={lesson.creator}\n          coordinates={lesson.location}\n          onDelete={props.onDeleteLesson}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default LessonList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LessonList from '../components/LessonList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserLessons = () => {\n  const [loadedLessons, setloadedLessons] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchLessons = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/lessons/user/${userId}`\n        );\n        setloadedLessons(responseData.lessons);\n      } catch (err) {}\n    };\n    fetchLessons();\n  }, [sendRequest, userId]);\n\n  const lessonDeletedHandler = deletedlessonId => {\n    setloadedLessons(prevLessons =>\n      prevLessons.filter(lesson => lesson.id !== deletedlessonId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedLessons && (\n        <LessonList items={loadedLessons} onDeleteLesson={lessonDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserLessons;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './LessonForm.css';\n\nconst UpdateLesson = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedLesson, setloadedLesson] = useState();\n  const lessonId = useParams().lessonId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchLesson = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}lessons/${lessonId}`\n        );\n        setloadedLesson(responseData.lesson);\n        setFormData(\n          {\n            title: {\n              value: responseData.lesson.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.lesson.description,\n              isValid: true\n            }\n          },\n          true\n        );\n      } catch (err) {}\n    };\n    fetchLesson();\n  }, [sendRequest, lessonId, setFormData]);\n\n  const lessonUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/lessons/${lessonId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/lessons');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedLesson && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find lesson!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedLesson && (\n        <form className=\"lesson-form\" onSubmit={lessonUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedLesson.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedLesson.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE LESSON\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateLesson;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL TOPICS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/lessons`}>MY LESSONS</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/lessons/new\">ADD LESSON</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTH</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Toponymics Map</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewLesson from './lessons/pages/NewLesson';\nimport UserLessons from './lessons/pages/UserLessons';\nimport UpdateLesson from './lessons/pages/UpdateLesson';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/lessons\" exact>\n          <UserLessons />\n        </Route>\n        <Route path=\"/lessons/new\" exact>\n          <NewLesson />\n        </Route>\n        <Route path=\"/lessons/:lessonId\">\n          <UpdateLesson />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/lessons\" exact>\n          <UserLessons />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}