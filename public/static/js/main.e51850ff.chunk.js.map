{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewLesson","UserLessons","UpdateLesson","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.e51850ff.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL TOPICS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/lessons`}>MY LESSONS</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/lessons/new\">ADD LESSON</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTH</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Toponymics Map</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, {Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewLesson from './lessons/pages/NewLesson';\n// import UserLessons from './lessons/pages/UserLessons';\n// import UpdateLesson from './lessons/pages/UpdateLesson';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"))\nconst NewLesson = React.lazy(() => import(\"./lessons/pages/NewLesson\"))\nconst UserLessons = React.lazy(() => import(\"./lessons/pages/UserLessons\"))\nconst UpdateLesson = React.lazy(() => import(\"./lessons/pages/UpdateLesson\"))\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"))\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/lessons\" exact>\n          <UserLessons />\n        </Route>\n        <Route path=\"/lessons/new\" exact>\n          <NewLesson />\n        </Route>\n        <Route path=\"/lessons/:lessonId\">\n          <UpdateLesson />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/lessons\" exact>\n          <UserLessons />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense \n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner/>\n              </div>\n            }\n          >\n              {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}